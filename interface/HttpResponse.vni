package vnx.addons;

class HttpResponse {
	
	int status;						// HTTP status code
	
	string content_type;			// MIME type of payload
	
	vector<pair<string, string>> headers;		// HTTP headers
	
	vnx.Buffer payload;
	
	vnx.Hash64 stream;				// stream address in case of a stream (zero otherwise)
	
	long total_size = -1;			// total size of the response if it is chunked, -1 if unknown [bytes]
	
	string error_text;				// optional error description
	
	bool is_chunked;				// if response is split into chunks
	
	
	static HttpResponse* from_status(int status);

	static HttpResponse* from_text(string content);
	static HttpResponse* from_text_ex(string content, int status);
	
	static HttpResponse* from_string(string content, string mime_type);
	static HttpResponse* from_string_ex(string content, string mime_type, int status);
	
	static HttpResponse* from_string_json(string content);
	static HttpResponse* from_string_json_ex(string content, int status);
	
	static HttpResponse* from_object_json(vnx.Object value);
	static HttpResponse* from_object_json_ex(vnx.Object value, int status);
	
	static HttpResponse* from_value_json(vnx.Value* value);
	static HttpResponse* from_value_json_ex(vnx.Value* value, int status);
	
	static HttpResponse* from_value_binary(vnx.Value* value);
	static HttpResponse* from_value_binary_ex(vnx.Value* value, int status);
	
}
